# movement.h stars.h
!main.cpp algorithm cctype cerrno clocale cmath cstdint cstdio cstdlib ctime ctype.h cwchar cwctype errno.h exception fstream graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h movement.h new numeric ostream random signal.h stars.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error time.h type_traits typeinfo utility vector wchar.h wctype.h #<#>
!movement.cpp algorithm cctype cerrno clocale cmath cstdint cstdio cstdlib ctime ctype.h cwchar cwctype errno.h exception fstream graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h movement.h new numeric ostream random signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error time.h type_traits typeinfo utility vector wchar.h wctype.h #<#>
!movement.h algorithm cctype cerrno clocale cmath cstdint cstdio cstdlib ctime ctype.h cwchar cwctype errno.h exception fstream graphics.h initializer_list ios iosfwd iostream istream keys_n_colors.h limits limits.h locale.h math.h new numeric ostream random signal.h stddef.h stdexcept stdint.h stdio.h stdlib.h streambuf string string_view system_error time.h type_traits typeinfo utility vector wchar.h wctype.h #<#>
!stars.cpp ctime graphics.h keys_n_colors.h stars.h time.h #<#>
 struct@planet _type_ #<movement.h>
 struct@remember _type_ #<stars.h>
M_PI #<movement.h>
WX #<movement.h>
WY #<movement.h>
all_planets : vector #<movement.cpp>
change_dir(int index) -> void #<movement.h>
col_stars #<movement.h>
colors : int[] #<stars.cpp>
comet(double p, double e, double phi) -> void #<movement.h>
cometa : planet #<movement.cpp>
count_st : int #<stars.cpp>
main() -> int #<main.cpp>
move_planet() -> void #<movement.h>
offx : double #<movement.cpp>
offxn : double #<movement.cpp>
offy : double #<movement.cpp>
offyn : double #<movement.cpp>
planet _type_ #<movement.h>
put_planets() -> void #<movement.h>
rast_stars(int i) -> void #<stars.h>
read_file() -> void #<movement.h>
remember _type_ #<stars.h>
scale : double #<main.cpp>
scalen : double #<movement.cpp>
stars() -> void #<stars.h>
stars_for_main() -> void #<stars.h>
stars_rem : doublescalen=1.0;double offx=0, offy=0, offxn=0, offyn=0;extern remember[] #<main.cpp>
stars_rem : remember[] #<stars.cpp>
wheelhandler(int x, int y) -> void #<main.cpp>
	planet::ID : int #<movement.h>
	planet::BASEID : int #<movement.h>
	planet::X : int #<movement.h>
	planet::Y : int #<movement.h>
	planet::P_RAD : int #<movement.h>
	planet::ORB_RAD : int #<movement.h>
	planet::SPEED : double #<movement.h>
	planet::t : double #<movement.h>
	planet::bmp : IMAGE* #<movement.h>
	remember::x : int #<stars.h>
	remember::y : int #<stars.h>
	remember::col : int #<stars.h>
